@{
  Layout = "_Layout";
}

@using HairSalon.Models;
@model HairSalon.Models.Stylist;

<h2>Stylist Details</h2>
<hr />
<h4>Stylist First Name: @Html.DisplayFor(model => model.StylistFirstName)</h4>
<h4>Stylist Last Name: @Html.DisplayFor(model => model.StylistLastName)</h4>


@if (@Model.Clients.Count == 0)
{
  <p>No clients have been added yet!</p>
}
else{
  <h4>Clients of this stylist:</h4>
  <ul>
  @foreach (var join in Model.Clients)
  {
  <li>@Html.ActionLink($"{@join.Client.ClientFirstName + " " + @join.Client.ClientLastName}", "Details", "Clients",new { id = join.Client.ClientId}, null)</li>
  @using (Html.BeginForm("DeleteClient", "Stylists"))
    {
      @Html.Hidden("joinId", @join.ClientStylistId)
      @Html.HiddenFor(model=>model.StylistId)
      <input type="submit" Value="Delete" />
    }
  }
  </ul>
}



<hr />
<p>@Html.ActionLink("Add new client", "AddClient", new {id=Model.StylistId})</p>
<p>@Html.ActionLink("Edit Stylist", "Edit", new { id = Model.StylistId })</p>
<p>@Html.ActionLink("Delete Stylist", "Delete", new { id = Model.StylistId })</p>
<p>@Html.ActionLink("Back to all stylists", "Index")</p>
<p>@Html.ActionLink("Home", "Index", "Home")</p>

@*url	A field for entering a URL. Looks like a text input, but has validation parameters and relevant keyboard in supporting browsers and devices with dynamic keyboards.	

dirname	text, search	Name of form field to use for sending the element's directionality in form submission

formaction	image, submit	URL to use for form submission*@